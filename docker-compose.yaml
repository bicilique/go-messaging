version: '3.8'

# IMPORTANT: This docker-compose.yaml requires a .env file in the same directory
# Copy .env.example to .env and fill in your configuration values
# Required: TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID, DB_USER, DB_PASSWORD, DB_NAME

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: go-messaging-db
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./init_database.sql:/docker-entrypoint-initdb.d/02-init_database.sql
    ports:
      - "5544:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - messaging-network

  # Go Messaging Bot Application
  # go-messaging:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: go-messaging-app
  #   env_file:
  #     - .env
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     # Application Configuration
  #     - DEVELOPER_HOST=false  # Don't load .env in Docker
  #     - PORT=${PORT}
  #     - MODE=${MODE}
  #     
  #     # Telegram Bot Configuration
  #     - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
  #     - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
  #     
  #     # Database Configuration
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_NAME=${DB_NAME}
  #     - DB_SSLMODE=disable
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s
  #   networks:
  #     - messaging-network

networks:
  messaging-network:
    driver: bridge